<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Don&#39;t Watch, Listen</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Don&#39;t Watch, Listen</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Mar 2025 11:13:28 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Hidden Cost of Always Being Right</title>
      <link>http://localhost:1313/posts/the-hidden-cost-of-always-being-right/</link>
      <pubDate>Tue, 11 Mar 2025 11:13:28 -0700</pubDate>
      <guid>http://localhost:1313/posts/the-hidden-cost-of-always-being-right/</guid>
      <description>&lt;p&gt;Tonight, it’s not about politics—but, self-reflection. Often in personal life, I find myself overreacting and not truly listening. Even when I ask for nuance, it’s rarely to understand—it’s to prove I’m right, and that narrows my perspective, leaving blind spots that I can’t ignore. If we&amp;rsquo;re always the smartest person in the room, we&amp;rsquo;ll never know true enlightenment. Overconfidence doesn’t just limit you; it cuts you off from what others offer. Shift your focus from winning alone to growing together and listen, really listen, embrace “I don’t know.” Admitting that, isn’t a weakness, it’s courage that shadows pretending you’ve got it all figured out.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Social Security Fairness Act Was Never About Fairness</title>
      <link>http://localhost:1313/posts/the-social-security-fairness-act-was-never-about-fairness/</link>
      <pubDate>Sat, 08 Mar 2025 21:23:57 -0800</pubDate>
      <guid>http://localhost:1313/posts/the-social-security-fairness-act-was-never-about-fairness/</guid>
      <description>&lt;p&gt;When &lt;strong&gt;President Joe Biden signed the Social Security Fairness Act (SSFA) on January 5, 2025&lt;/strong&gt;, I bought the pitch for a minute: fix what many saw as an unfair system. The repeal of the &lt;strong&gt;Windfall Elimination Provision (WEP) and Government Pension Offset (GPO)&lt;/strong&gt; meant that &lt;strong&gt;public-sector retirees—teachers, firefighters, and police officers—would no longer see their Social Security benefits reduced because they also had government pensions&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Supporters framed it as long-overdue justice, correcting a system that had penalized public employees for decades. But here’s the problem: &lt;strong&gt;fixing one unfairness doesn’t mean you don’t create another in its place&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Stock Buybacks Are a Scam—But Not for the Reason You Think</title>
      <link>http://localhost:1313/posts/stock-buybacks-are-a-scambut-not-for-the-reason-you-think/</link>
      <pubDate>Tue, 04 Mar 2025 23:55:47 -0800</pubDate>
      <guid>http://localhost:1313/posts/stock-buybacks-are-a-scambut-not-for-the-reason-you-think/</guid>
      <description>&lt;p&gt;In 2023, U.S. companies dumped &lt;strong&gt;$900 billion into stock buybacks&lt;/strong&gt;—more than they spent on wages or R&amp;amp;D combined. At their core, a &lt;strong&gt;stock buyback&lt;/strong&gt; happens when a company &lt;strong&gt;uses its own money to repurchase shares from the stock market&lt;/strong&gt;, reducing the number of outstanding shares. This benefits existing shareholders by &lt;strong&gt;increasing the value of the remaining shares&lt;/strong&gt;, making it a common strategy for corporations looking to boost stock prices.&lt;/p&gt;&#xA;&lt;p&gt;But while some argue that buybacks &lt;strong&gt;stabilize stock prices and return value to investors&lt;/strong&gt;, others see them as &lt;strong&gt;a legalized form of market manipulation&lt;/strong&gt;, disproportionately benefiting &lt;strong&gt;executives and wealthy shareholders&lt;/strong&gt; while diverting money that &lt;strong&gt;could be spent on wages, R&amp;amp;D, or long-term growth.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Panasonics Big Bet on Kansas–A Win or a Ticking Time Bomb</title>
      <link>http://localhost:1313/posts/panasonics-big-bet-on-kansasa-win-or-a-ticking-time-bomb/</link>
      <pubDate>Sun, 02 Mar 2025 10:32:22 -0800</pubDate>
      <guid>http://localhost:1313/posts/panasonics-big-bet-on-kansasa-win-or-a-ticking-time-bomb/</guid>
      <description>&lt;p&gt;I didn’t expect to go down this rabbit hole, but here we are. It started when I saw a take on X (Twitter) calling the &lt;strong&gt;Panasonic EV battery plant in De Soto, Kansas, a perfect example of government waste&lt;/strong&gt;. That was enough to get me curious. &lt;strong&gt;Is this just a big corporate handout, or is there a real economic win here?&lt;/strong&gt; I went deep into the details, and honestly, I can see &lt;strong&gt;both sides of the argument&lt;/strong&gt;—and I think people aren’t realizing the full financial weight of what’s happening.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Is Pramila Jayapal Good for Washington</title>
      <link>http://localhost:1313/posts/is-pramila-jayapal-good-for-washington/</link>
      <pubDate>Sun, 02 Mar 2025 01:41:31 -0800</pubDate>
      <guid>http://localhost:1313/posts/is-pramila-jayapal-good-for-washington/</guid>
      <description>&lt;p&gt;Pramila Jayapal has positioned herself as a champion for progressive values, representing Washington’s 7th Congressional District with a strong stance on healthcare, immigration, and social justice. She’s an outspoken critic of Donald Trump, frequently challenging his policies on Medicaid cuts, federal funding freezes, and immigration enforcement. But beyond the rhetoric, how effective is she? Is she truly fighting for Washington’s best interests, or is she just another politician playing the game of influence and lobbying?&lt;/p&gt;</description>
    </item>
    <item>
      <title>One of the Nine Ways Big Business Avoids Billions in Taxes Legally</title>
      <link>http://localhost:1313/posts/one-of-the-nine-ways-big-business-avoids-billions-in-taxes-legally/</link>
      <pubDate>Sat, 01 Mar 2025 21:09:09 -0800</pubDate>
      <guid>http://localhost:1313/posts/one-of-the-nine-ways-big-business-avoids-billions-in-taxes-legally/</guid>
      <description>&lt;p&gt;Big businesses don’t pay taxes the way you do. While the average person’s paycheck gets taxed before it even hits their bank account, corporations use &lt;strong&gt;loopholes, deductions, and legal maneuvers&lt;/strong&gt; to shrink their tax bills—sometimes down to nothing. It’s called &lt;strong&gt;aggressive tax planning&lt;/strong&gt;—not illegal, but certainly not something the everyday taxpayer can pull off. From &lt;strong&gt;offshore tax havens to stock buybacks and depreciation tricks&lt;/strong&gt;, here’s how the biggest companies legally avoid paying billions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mathematics and Physics of Light: Introduction to Light</title>
      <link>http://localhost:1313/posts/mathematics-and-physics-of-light-introduction-to-light/</link>
      <pubDate>Wed, 19 Feb 2025 23:22:54 -0800</pubDate>
      <guid>http://localhost:1313/posts/mathematics-and-physics-of-light-introduction-to-light/</guid>
      <description>&lt;h2 id=&#34;chapter-1-introduction-to-light&#34;&gt;&lt;strong&gt;Chapter 1: Introduction to Light&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Light is one of the most fundamental and fascinating phenomena in the universe. It is responsible for our ability to see, it fuels life through photosynthesis, and it plays a crucial role in technology, from fiber optic communication to laser surgery. However, despite its everyday presence, light is an incredibly complex and multi-faceted subject that has challenged scientists for centuries.&lt;/p&gt;&#xA;&lt;p&gt;To truly understand light, one must first understand the broader concept it belongs to: &lt;strong&gt;electromagnetic radiation&lt;/strong&gt;. Light is not an isolated phenomenon—it is part of a vast spectrum of energy waves that travel through space, known as the &lt;strong&gt;electromagnetic spectrum&lt;/strong&gt;. This spectrum includes familiar forms of energy like radio waves, microwaves, X-rays, and gamma rays. Each of these, including visible light, consists of &lt;strong&gt;oscillating electric and magnetic fields&lt;/strong&gt; that propagate through space at the speed of light.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Godot 4.3 Using ColorRect for Simple 2D Backgrounds</title>
      <link>http://localhost:1313/posts/godot-4.3-using-colorrect-for-simple-2d-backgrounds/</link>
      <pubDate>Wed, 19 Feb 2025 22:22:35 -0800</pubDate>
      <guid>http://localhost:1313/posts/godot-4.3-using-colorrect-for-simple-2d-backgrounds/</guid>
      <description>&lt;p&gt;This paper presents an efficient method for procedurally generating and interpolating a 2D background color in &lt;strong&gt;Godot 4.3&lt;/strong&gt; using &lt;strong&gt;GDScript&lt;/strong&gt;. The implementation relies entirely on scripting, eliminating the need for manual adjustments in the Godot editor. By leveraging &lt;strong&gt;linear interpolation (LERP)&lt;/strong&gt;, the system smoothly transitions between predefined color values over a fixed duration, ensuring a seamless visual experience. This approach is particularly beneficial for procedurally generated environments, menu screens, and dynamic aesthetic modifications in 2D games.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Breaking Down Interpolation (Lerp)</title>
      <link>http://localhost:1313/posts/breaking-down-interpolation-lerp/</link>
      <pubDate>Wed, 19 Feb 2025 19:26:21 -0800</pubDate>
      <guid>http://localhost:1313/posts/breaking-down-interpolation-lerp/</guid>
      <description>&lt;h3 id=&#34;what-is-interpolation-lerpabt&#34;&gt;&lt;strong&gt;What is Interpolation (&lt;em&gt;Lerp(A,B,t)&lt;/em&gt;)?&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Interpolation is a way to estimate values between two known points. Think of it like filling in the gaps between two numbers, positions, or colors smoothly instead of jumping straight from one to the other.&lt;/p&gt;&#xA;&lt;p&gt;Another way of interpreting interpolation is to try, &lt;strong&gt;&amp;ldquo;guessing the values in between two known points.&amp;rdquo;&lt;/strong&gt; If you have two points on a graph, interpolation helps you estimate what lies between them based on patterns.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Godot 43 Creating UI Elements</title>
      <link>http://localhost:1313/posts/godot-43-creating-ui-elements/</link>
      <pubDate>Sun, 16 Feb 2025 14:58:21 -0800</pubDate>
      <guid>http://localhost:1313/posts/godot-43-creating-ui-elements/</guid>
      <description>&lt;p&gt;If you’re coding exclusively in &lt;strong&gt;Visual Studio Code (VSC)&lt;/strong&gt; and developing a game in &lt;strong&gt;Godot&lt;/strong&gt;, you’ll need to create and manage &lt;strong&gt;UI elements&lt;/strong&gt; like &lt;strong&gt;Labels, Buttons, Health Bars, and Score Counters&lt;/strong&gt; entirely through GDScript. This guide will walk you through setting up a fully &lt;strong&gt;script-driven UI system&lt;/strong&gt;, ensuring it scales properly and remains organized.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-setting-up-ui-elements-with-code&#34;&gt;&lt;strong&gt;1. Setting Up UI Elements with Code&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Since we&amp;rsquo;re not using the scene editor, we must instantiate UI elements programmatically. UI nodes in Godot fall under the &lt;strong&gt;Control&lt;/strong&gt; class and include elements like:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Godot 4.3 Adding Basic Keyboard Input</title>
      <link>http://localhost:1313/posts/godot-43-adding-basic-input/</link>
      <pubDate>Sun, 16 Feb 2025 13:58:24 -0800</pubDate>
      <guid>http://localhost:1313/posts/godot-43-adding-basic-input/</guid>
      <description>&lt;p&gt;Now that we’ve successfully set up a &lt;strong&gt;3D scene&lt;/strong&gt;, imported a &lt;strong&gt;custom 3D model&lt;/strong&gt;, and made it &lt;strong&gt;rotate&lt;/strong&gt;, it&amp;rsquo;s time to &lt;strong&gt;add user input&lt;/strong&gt;. In this guide, we’ll modify our script so that &lt;strong&gt;pressing the spacebar makes the model jump&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;final-code-structure&#34;&gt;&lt;strong&gt;Final Code Structure&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Project/&#xA;├── Models/&#xA;│   └── 000_Snowpuff.glb   # Custom 3D Model&#xA;├── Scripts/&#xA;│   ├── main.gd       # Root scene script&#xA;│   └── skybox.gd     # Skybox configuration&#xA;├── Textures/&#xA;│   └── default_sky.hdr  # HDRI skybox texture&#xA;└── project.godot&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-understanding-input-in-godot-43&#34;&gt;&lt;strong&gt;1. Understanding Input in Godot 4.3&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Before writing code, let&amp;rsquo;s discuss &lt;strong&gt;how Godot handles input&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Godot 4.3 Set Up a 3D Project, Skybox &amp; Import Your Custom 3d Model from VSC</title>
      <link>http://localhost:1313/posts/godot-43-setting-up-a-3d-project-and-skybox-in-visual-studio-code/</link>
      <pubDate>Sat, 15 Feb 2025 18:27:41 -0800</pubDate>
      <guid>http://localhost:1313/posts/godot-43-setting-up-a-3d-project-and-skybox-in-visual-studio-code/</guid>
      <description>&lt;p&gt;This guide teaches you how to create a &lt;strong&gt;3D scene programmatically&lt;/strong&gt; in Godot 4.3, complete with a &lt;strong&gt;custom skybox&lt;/strong&gt;, using only code (no editor setup). We’ll explain core concepts like &lt;code&gt;WorldEnvironment&lt;/code&gt;, &lt;code&gt;Camera3D&lt;/code&gt;, and &lt;code&gt;SkyMaterial.&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;final-code-structure&#34;&gt;&lt;strong&gt;Final Code Structure&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Project/&#xA;├── scripts/&#xA;│   ├── main.gd       # Root scene script&#xA;│   └── skybox.gd     # Skybox configuration&#xA;└── textures/&#xA;    └── default_sky.hdr  # HDRI skybox texture&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-setting-up-the-main-scene-maingd&#34;&gt;&lt;strong&gt;1. Setting Up the Main Scene (&lt;code&gt;main.gd&lt;/code&gt;)&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;-code&#34;&gt;🔹 &lt;strong&gt;Code&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript&#34; data-lang=&#34;gdscript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Node3D&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;_ready&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 1. Configure camera&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; camera &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Camera3D&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;new&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    camera&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Vector3&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# Position (X, Y, Z)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    camera&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;look_at&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Vector3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ZERO)        &lt;span style=&#34;color:#75715e&#34;&gt;# Look at world origin&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;add_child&lt;/span&gt;(camera)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    camera&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;make_current&lt;/span&gt;()  &lt;span style=&#34;color:#75715e&#34;&gt;# Activate this camera&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 2. Add skybox&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; skybox &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; load(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;res://Scripts/skybox.gd&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;new&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;add_child&lt;/span&gt;(skybox)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;-explanation&#34;&gt;🔹 &lt;strong&gt;Explanation&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Why We Need a Camera&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Convert WEBP Files to PNG Using VS Code in Python</title>
      <link>http://localhost:1313/posts/using-python-3-to-convert-webp-to-png/</link>
      <pubDate>Sat, 15 Feb 2025 17:21:16 -0800</pubDate>
      <guid>http://localhost:1313/posts/using-python-3-to-convert-webp-to-png/</guid>
      <description>&lt;p&gt;If you have a set of &lt;code&gt;.webp&lt;/code&gt; images that need to be converted to &lt;code&gt;.png&lt;/code&gt;, Python makes the process simple and efficient. In this guide, I’ll walk you through how to convert WebP files to PNG using &lt;strong&gt;Visual Studio Code (VS Code)&lt;/strong&gt; and Python.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;p&gt;Before we begin, ensure you have the following:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Python Installed&lt;/strong&gt;&lt;br&gt;&#xA;If you don’t have Python installed, download it from &lt;a href=&#34;https://www.python.org/&#34;&gt;python.org&lt;/a&gt; and install it.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;VS Code Installed&lt;/strong&gt;&lt;br&gt;&#xA;Download and install &lt;strong&gt;Visual Studio Code&lt;/strong&gt; from &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;code.visualstudio.com&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Create Custom 3D Assets Using AI Meshy and Blender for Godot</title>
      <link>http://localhost:1313/posts/create-custom-3d-assets-using-ai-mesh-and-blender-for-godot/</link>
      <pubDate>Sat, 15 Feb 2025 17:08:49 -0800</pubDate>
      <guid>http://localhost:1313/posts/create-custom-3d-assets-using-ai-mesh-and-blender-for-godot/</guid>
      <description>&lt;p&gt;In this guide, we will go step by step to generate a &lt;strong&gt;2D representation of a 3D object&lt;/strong&gt;, convert it into a  &lt;strong&gt;fully textured 3D model&lt;/strong&gt;, and format it properly for use in &lt;strong&gt;Godot&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;We will cover:&lt;/p&gt;&#xA;&lt;p&gt;✅ Using &lt;strong&gt;AI Image Generators&lt;/strong&gt; to create a 2D image of your 3D object.&lt;/p&gt;&#xA;&lt;p&gt;✅ &lt;strong&gt;Removing the background&lt;/strong&gt; and converting formats for best results.&lt;/p&gt;&#xA;&lt;p&gt;✅ Importing the &lt;strong&gt;2D image into Meshy AI&lt;/strong&gt; to generate a &lt;strong&gt;3D model&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Godot 4.3 Understanding Parent and Child Relationships Through an Entity System</title>
      <link>http://localhost:1313/posts/godot-43-understanding-parent-and-child-relationships-through-an-entity-system/</link>
      <pubDate>Sat, 15 Feb 2025 14:17:33 -0800</pubDate>
      <guid>http://localhost:1313/posts/godot-43-understanding-parent-and-child-relationships-through-an-entity-system/</guid>
      <description>&lt;p&gt;In our previous section, we introduced &lt;strong&gt;custom classes&lt;/strong&gt; in Godot by moving the &lt;code&gt;get_properties()&lt;/code&gt; function into its own dedicated class, &lt;code&gt;ObjectAnalyzer&lt;/code&gt;. This helped us keep &lt;code&gt;main.gd&lt;/code&gt; clean while improving code organization.&lt;/p&gt;&#xA;&lt;p&gt;Now, we’re ready to take a big step forward:  &lt;strong&gt;understanding parent and child relationships in Godot&lt;/strong&gt;. This will serve as the foundation for &lt;strong&gt;inheritance&lt;/strong&gt; — a key concept in game development that allows us to structure our projects efficiently.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Godot 4.3 Moving Get_properties to a Separate Class</title>
      <link>http://localhost:1313/posts/godot-43-moving-get_properties-to-a-separate-class/</link>
      <pubDate>Sat, 15 Feb 2025 14:01:08 -0800</pubDate>
      <guid>http://localhost:1313/posts/godot-43-moving-get_properties-to-a-separate-class/</guid>
      <description>&lt;p&gt;So far, we’ve implemented a powerful object analysis system that can dynamically inspect and categorize both &lt;strong&gt;node-based and non-node objects&lt;/strong&gt; in Godot. However, keeping all this logic inside &lt;code&gt;main.gd&lt;/code&gt; can &lt;strong&gt;clutter&lt;/strong&gt; the script, making it harder to maintain and expand.&lt;/p&gt;&#xA;&lt;p&gt;To improve  &lt;strong&gt;code organization&lt;/strong&gt;, we’ll move the &lt;code&gt;get_properties()&lt;/code&gt; function into its own dedicated class. This will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Keep &lt;code&gt;main.gd&lt;/code&gt; clean and focused&lt;/strong&gt; on high-level game logic.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Make &lt;code&gt;get_properties()&lt;/code&gt; reusable&lt;/strong&gt; across different parts of the project.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Encourage modular programming&lt;/strong&gt; , making it easier to expand in the future.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;step-1-creating-a-new-script-for-object-analysis&#34;&gt;&lt;strong&gt;Step 1: Creating a New Script for Object Analysis&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;In  &lt;strong&gt;Visual Studio Code&lt;/strong&gt;, we will create a new script to handle object analysis separately.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Godot 4.3 Expanding Object Compatibility Beyond Nodes</title>
      <link>http://localhost:1313/posts/godot-43-expanding-object-compatibility-beyond-nodes/</link>
      <pubDate>Sat, 15 Feb 2025 02:37:34 -0800</pubDate>
      <guid>http://localhost:1313/posts/godot-43-expanding-object-compatibility-beyond-nodes/</guid>
      <description>&lt;p&gt;In the previous section, we explored analyzing nodes in Godot using &lt;code&gt;get_property_list()&lt;/code&gt;. This gave us the ability to inspect a node’s properties and their respective types. However, in Godot, not all objects are nodes. Many essential data types—such as &lt;code&gt;Vector2&lt;/code&gt;, &lt;code&gt;Color&lt;/code&gt;, &lt;code&gt;Dictionary&lt;/code&gt;, and &lt;code&gt;Array&lt;/code&gt;—do not have &lt;code&gt;get_property_list()&lt;/code&gt;, which means treating them the same way as nodes would lead to errors.&lt;/p&gt;&#xA;&lt;p&gt;This section builds upon our previous approach by expanding compatibility to all Godot objects. We aim to ensure that both node-based and non-node objects can be &lt;strong&gt;inspected, categorized, and returned in a structured format&lt;/strong&gt; for further use.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Godot 4.3 Basics</title>
      <link>http://localhost:1313/posts/godot-43-basics/</link>
      <pubDate>Sun, 09 Feb 2025 20:42:48 -0800</pubDate>
      <guid>http://localhost:1313/posts/godot-43-basics/</guid>
      <description>&lt;p&gt;In VSC let&amp;rsquo;s make a new folder in our root directory called Scripts, and then make a new file inside the Sripts folder called main.gd. Once this is made we will go into the Godot Engine and drag and drop the newly made file into the main scenes script found on the right side&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/Godot-43-Basics/1739163742328.png&#34; alt=&#34;Godot Main Scene Inspector&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;extends-keyword&#34;&gt;Extends keyword&lt;/h1&gt;&#xA;&lt;p&gt;To know what to extend, match your script to the type of node it’s attached to or the functionality you need. In the case of the main.tscn because we made a Node2D to start, we will &lt;code&gt;extend Node2D&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up Godot 4.3 for Visual Studio Code</title>
      <link>http://localhost:1313/posts/setting-up-godot-43-for-visual-studio-code/</link>
      <pubDate>Sun, 09 Feb 2025 17:21:16 -0800</pubDate>
      <guid>http://localhost:1313/posts/setting-up-godot-43-for-visual-studio-code/</guid>
      <description>&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; These articles are written using Windows&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;Godot 4.3&lt;/em&gt; (&lt;a href=&#34;&#34;&gt;https://godotengine.org&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;Visual Studio Code&lt;/em&gt; (VSC) (&lt;a href=&#34;&#34;&gt;https://code.visualstudio.com&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;VSC Extension &lt;em&gt;godot-tools&lt;/em&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In VSC go to Extensions (ctrl+shift+x), and search and install &lt;em&gt;godot-tools&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Suggested Requirments:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;VSC Extension &lt;em&gt;C/C++&lt;/em&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In VSC go to Extensions (ctrl+shift+x), and search and install &lt;em&gt;C/C++&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;make-your-project&#34;&gt;&lt;strong&gt;Make your project:&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;Launch the &lt;code&gt;Godot_v4.3-stable_win64.exe&lt;/code&gt; and this will bring up the below window. If this is your first time launching the &lt;em&gt;Godot Engine - Project Manager&lt;/em&gt;, your project list will likely be empty.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
